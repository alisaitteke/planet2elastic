{
  "name": "Planet2elastic",
  "tagline": "Pushes a set of OpenStreetMap planet files to an ElasticSearch Geo Tile Cluster",
  "body": "# Planet 2 Elastic\r\nPushes a set of OpenStreetMap planet files to an Tile Based Elastic Index. You can grab planet files at [GeoFabrik](http://download.geofabrik.de/). This will parse all binary pbf files and index all nodes and ways within their respective tile quadkey location. The end result is an elastic document that looks like the following. Document index convention follows {QuadKey}-{OsmId}\r\n```\r\n{\r\n        \"_index\": \"places\",\r\n        \"_type\": \"place\",\r\n        \"_id\": \"1202033221320231-100149001\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"osmId\": \"100149001\",\r\n          \"type\": \"way\",\r\n          \"name\": \"FC Berwangen\",\r\n          \"coordinates\": {\r\n            \"type\": \"multilinestring\",\r\n            \"coordinates\": [\r\n              [\r\n                [\r\n                  8.98524,\r\n                  49.186888\r\n                ],\r\n                [\r\n                  8.98611,\r\n                  49.186606\r\n                ],\r\n                [\r\n                  8.985465,\r\n                  49.185754\r\n                ],\r\n                [\r\n                  8.984595,\r\n                  49.186035\r\n                ],\r\n                [\r\n                  8.98524,\r\n                  49.186888\r\n                ]\r\n              ]\r\n            ]\r\n          },\r\n          \"location\": {\r\n            \"lat\": 49.186434,\r\n            \"lon\": 8.98533\r\n          },\r\n          \"quadKey\": \"1202033221320231\",\r\n          \"id\": \"1202033221320231-100149001\"\r\n        }\r\n      }\r\n```\r\n\r\n##Setup\r\nPlease complete the following steps before you kickoff the elastic indexing. This assumes you have some general familiarity with elasticsearch. Please refer to this [Gist](https://gist.github.com/erikschlegel/0f4330009c7c5ae83831889609a8bb7c) if you have an Azure subscription and in need of a cloud-based elastic cluster.\r\n\r\n###Environment Settings\r\nSetup the following environment variables to specify the destination elastic cluster. This assumes your elastic cluster has basic authentication enabled, via [Shield](https://www.elastic.co/guide/en/shield/current/enable-basic-auth.html).\r\n+ ES_HOST: my-elasticbeast.azure.cloud.com\r\n+ ES_PORT: 9200\r\n+ ES_AUTH_USER: my-username\r\n+ ES_AUTH_PWD: mypassword\r\n\r\nProvide the directory location for your planet(.pbf) files  \r\n+ PBF_DIRECTORY: /pbfsource\r\n \r\n###Setup Elastic Indexes\r\nCreate two new indexes. To create a new index in elastic you provide a PUT request using a tool like [POSTMON](https://www.getpostman.com/) with the request URL following the convention ES_HOST:ES_PORT/ES_INDEX_NAME\r\n+ places: [places index defintion](https://github.com/erikschlegel/pbftoelastic/blob/master/indexes/places.json)\r\n+ tiles: [tiles index definition](https://github.com/erikschlegel/pbftoelastic/blob/master/indexes/tiles.json)\r\n\r\n##Import\r\n###Configuration\r\nThe mapping features that this framework imports from Openstreetmap is managed in [featureTags.js](https://github.com/erikschlegel/Planet2Elastic/blob/master/featureTags.js). Feel free to add/remove the data attributes relevant for your scenario(s).\r\n\r\n###Run Importer\r\n```\r\nnpm install\r\nnpm run import\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}